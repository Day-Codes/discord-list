@import url("https://fonts.googleapis.com/css2?family=Fredoka+One&display=swap");

div.container {
  background-color: #36393f
}

* {
  color: #fff;
  font-family: Fredoka One, sans-serif
}

@font-face {
  font-family: discord;
  src: url(https://discord.rovelstars.com/assets/font/sans.otf)
}

@font-face {
  font-family: burbank;
  src: url(https://discord.rovelstars.com/assets/font/Burbank.otf)
}

@font-face {
  font-family: angrybirds;
  src: url(https://discord.rovelstars.com/assets/angrybirds.ttf)
}

@font-face {
  font-family: bangers;
  src: url(https://discord.rovelstars.com/assets/Bangers.ttf)
}

@-webkit-keyframes mover {

  to {
    transform: translateY(-10px)
  }
}

@keyframes mover {
  0% {
    transform: translateY(0)
  }

  to {
    transform: translateY(-10px)
  }
}

@-webkit-keyframes animate {

  to {
    -webkit-transform: perspective(160px) rotateY(-180deg) rotateX(-180deg)
  }
}

@keyframes animate {
  0% {
    transform: perspective(160px) rotateX(0deg) rotateY(0deg);
    -webkit-transform: perspective(160px) rotateX(0deg) rotateY(0deg)
  }

  50% {
    transform: perspective(160px) rotateX(-180deg) rotateY(0deg);
    -webkit-transform: perspective(160px) rotateX(-180deg) rotateY(0deg)
  }

  to {
    transform: perspective(160px) rotateX(-180deg) rotateY(-180deg);
    -webkit-transform: perspective(160px) rotateX(-180deg) rotateY(-180deg)
  }
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3N0eWxlLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnRkFBZ0YsQ0FFaEYsY0FDRSx3QkFDRixDQUVBLEVBRUUsVUFBWSxDQURaLGtDQUVGLENBRUEsc0JBS0UsVUFBWSxDQUhaLG1CQUFvQixDQUNwQixpQkFBa0IsQ0FDbEIsZ0JBRUYsQ0FFQSxZQUNFLGFBQ0YsQ0FFQSx5QkFFRSxtQkFDRixDQUVBLGNBQ0UsbUJBQW9CLENBQ3BCLGdCQUNGLENBRUEsUUFDRSxjQUFlLENBQ2YsS0FBTSxDQUNOLFVBQ0YsQ0FFQSxvQkFDRSxnQkFDRixDQUVBLFlBQ0Usd0JBQ0YsQ0FFQSxjQUNFLHdCQUNGLENBRUEsYUFHRSx3QkFBeUIsQ0FEekIsaUJBQWtCLENBR2xCLG1CQUFvQixDQURwQixjQUFlLENBSGYsZ0JBS0YsQ0FFQSxXQUNFLFVBQWMsQ0FDZCxtQkFDRixDQUVBLFlBQ0UsVUFBYyxDQUNkLG1CQUNGLENBRUEsV0FDRSxtQkFBb0IsQ0FDcEIsNERBQ0YsQ0FFQSxXQUNFLG1CQUFvQixDQUNwQiwrREFDRixDQUVBLFdBQ0Usc0JBQXVCLENBQ3ZCLDZEQUNGLENBRUEsV0FDRSxtQkFBb0IsQ0FDcEIsMERBQ0YsQ0FFQSxjQUNFLDZDQUE4QyxDQUM5QyxxQ0FDRixDQUVBLHlCQUNFLEdBRVUsdUJBQ1YsQ0FFQSxHQUVVLDJCQUNWLENBQ0YsQ0FFQSxpQkFDRSxHQUVVLHVCQUNWLENBRUEsR0FFVSwyQkFDVixDQUNGLENBRUEsU0FHRSx3QkFBeUIsQ0FDekIsV0FBWSxDQUlaLFFBQWUsQ0FOZixTQUFVLENBSVYsY0FBZSxDQUdmLEtBQVEsQ0FKUixVQUFXLENBRVgsWUFHRixDQUVBLGdCQUVFLFdBQVksQ0FDWixpQkFBa0IsQ0FGbEIsVUFHRixDQUVBLHlCQUlFLFlBQWEsQ0FGYixRQUFTLENBS1Qsa0JBQW1CLENBRG5CLGlCQUFrQixDQUxsQixpQkFBa0IsQ0FFbEIsT0FBUSxDQUVSLFdBR0YsQ0FFQSxRQUtFLGlEQUFrRCxDQUNsRCx5Q0FBMEMsQ0FIMUMscUJBQXNCLENBQ3RCLGlCQUFrQixDQUZsQixXQUFZLENBTVosZ0JBQWlCLENBRGpCLGlCQUFrQixDQUVsQixlQUFnQixDQVJoQixVQVNGLENBRUEsMkJBQ0UsR0FDRSxvQ0FDRixDQUVBLElBQ0UscURBQ0YsQ0FFQSxHQUNFLHNFQUNGLENBQ0YsQ0FFQSxtQkFDRSxHQUNFLHdEQUF5RCxDQUN6RCxnRUFDRixDQUVBLElBQ0UsMkRBQTRELENBQzVELG1FQUNGLENBRUEsR0FDRSw4REFBK0QsQ0FDL0Qsc0VBQ0YsQ0FDRixDQUVBLFFBT0Usd0JBQXlCLENBR3pCLGtCQUFBLENBUEEsV0FBWSxDQUNaLGNBQWUsQ0FLZixZQUFhLENBSGIsV0FBWSxDQUxaLGNBQWUsQ0FDZixVQUFXLENBTVgsbUJBQW9CLENBSHBCLFVBTUYsQ0FFQSxhQVNFLDRCQUE0QixDQUE1Qix3QkFBNEIsQ0FINUIsUUFBUyxDQUhULFFBQVMsQ0FDVCxnQkFBaUIsQ0FDakIsZ0JBQWlCLENBSmpCLGlCQUFrQixDQUNsQixPQUFRLENBS1IsT0FHRixDQUVBLGNBQ0Usb0JBQXlCLENBRXpCLDJCQUE0QixDQUM1QiwrQkFBZ0MsQ0FGaEMsU0FHRiIsImZpbGUiOiJzdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1GcmVkb2thK09uZSZkaXNwbGF5PXN3YXAnKTtcclxuXHJcbmRpdi5jb250YWluZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzNjM5M2Y7XHJcbn1cclxuXHJcbioge1xyXG4gIGZvbnQtZmFtaWx5OiAnRnJlZG9rYSBPbmUnLCBzYW5zLXNlcmlmO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuaDEuaGVhZGVyLFxyXG5oMy5zdWJ0aXRsZSB7XHJcbiAgZm9udC1mYW1pbHk6IGJ1cmJhbms7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHdvcmQtc3BhY2luZzogNXB4O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuaDMuc3VidGl0bGUge1xyXG4gIGNvbG9yOiAjOEU4RThFO1xyXG59XHJcblxyXG4uZHJvcGRvd24taXRlbSxcclxuLm5hdi1saW5rIHtcclxuICBmb250LWZhbWlseTogYmFuZ2VycztcclxufVxyXG5cclxuLm5hdmJhci1icmFuZCB7XHJcbiAgZm9udC1mYW1pbHk6IGRpc2NvcmQ7XHJcbiAgZm9udC13ZWlnaHQ6IDE1cHg7XHJcbn1cclxuXHJcbi5zdGlja3kge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5zdGlja3krZC5jb250YWluZXIge1xyXG4gIHBhZGRpbmctdG9wOiA2MHB4O1xyXG59XHJcblxyXG4uc3dhbC1tb2RhbCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM2MzkzZjtcclxufVxyXG5cclxuLnN3YWwtb3ZlcmxheSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJmMzEzNjtcclxufVxyXG5cclxuLnN3YWwtYnV0dG9uIHtcclxuICBwYWRkaW5nOiA3cHggMTlweDtcclxuICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQzYjU4MTtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgZm9udC1mYW1pbHk6IGRpc2NvcmQ7XHJcbn1cclxuXHJcbi5zd2FsLXRleHQge1xyXG4gIGNvbG9yOiAjZmZmZmZmO1xyXG4gIGZvbnQtZmFtaWx5OiBkaXNjb3JkO1xyXG59XHJcblxyXG4uc3dhbC10aXRsZSB7XHJcbiAgY29sb3I6ICNmZmZmZmY7XHJcbiAgZm9udC1mYW1pbHk6IGJ1cmJhbms7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiBkaXNjb3JkO1xyXG4gIHNyYzogdXJsKGh0dHBzOi8vZGlzY29yZC5yb3ZlbHN0YXJzLmNvbS9hc3NldHMvZm9udC9zYW5zLm90Zik7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiBidXJiYW5rO1xyXG4gIHNyYzogdXJsKGh0dHBzOi8vZGlzY29yZC5yb3ZlbHN0YXJzLmNvbS9hc3NldHMvZm9udC9CdXJiYW5rLm90Zik7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiBhbmdyeWJpcmRzO1xyXG4gIHNyYzogdXJsKGh0dHBzOi8vZGlzY29yZC5yb3ZlbHN0YXJzLmNvbS9hc3NldHMvYW5ncnliaXJkcy50dGYpO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogYmFuZ2VycztcclxuICBzcmM6IHVybChodHRwczovL2Rpc2NvcmQucm92ZWxzdGFycy5jb20vYXNzZXRzL0JhbmdlcnMudHRmKTtcclxufVxyXG5cclxuaW1nLnZlcnQtbW92ZSB7XHJcbiAgLXdlYmtpdC1hbmltYXRpb246IG1vdmVyIDFzIGluZmluaXRlIGFsdGVybmF0ZTtcclxuICBhbmltYXRpb246IG1vdmVyIDFzIGluZmluaXRlIGFsdGVybmF0ZTtcclxufVxyXG5cclxuQC13ZWJraXQta2V5ZnJhbWVzIG1vdmVyIHtcclxuICAwJSB7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIH1cclxuXHJcbiAgMTAwJSB7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTBweCk7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTBweCk7XHJcbiAgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIG1vdmVyIHtcclxuICAwJSB7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIH1cclxuXHJcbiAgMTAwJSB7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTBweCk7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTBweCk7XHJcbiAgfVxyXG59XHJcblxyXG4jbG9hZGluZyB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM2MzkzZjtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHotaW5kZXg6IDk5OTk7XHJcbiAgbWFyZ2luLXRvcDogMHB4O1xyXG4gIHRvcDogMHB4O1xyXG59XHJcblxyXG4jbG9hZGluZy1jZW50ZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbiNsb2FkaW5nLWNlbnRlci1hYnNvbHV0ZSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICB0b3A6IDUwJTtcclxuICBoZWlnaHQ6IDIwMHB4O1xyXG4gIHdpZHRoOiAyMDBweDtcclxuICBtYXJnaW4tdG9wOiAtMTAwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IC0xMDBweDtcclxufVxyXG5cclxuI29iamVjdCB7XHJcbiAgd2lkdGg6IDYwcHg7XHJcbiAgaGVpZ2h0OiA2MHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIC13ZWJraXQtYW5pbWF0aW9uOiBhbmltYXRlIDFzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xyXG4gIGFuaW1hdGlvbjogYW5pbWF0ZSAxcyBpbmZpbml0ZSBlYXNlLWluLW91dDtcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXRvcDogNjBweDtcclxufVxyXG5cclxuQC13ZWJraXQta2V5ZnJhbWVzIGFuaW1hdGUge1xyXG4gIDAlIHtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSgxNjBweCk7XHJcbiAgfVxyXG5cclxuICA1MCUge1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDE2MHB4KSByb3RhdGVZKC0xODBkZWcpO1xyXG4gIH1cclxuXHJcbiAgMTAwJSB7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcGVyc3BlY3RpdmUoMTYwcHgpIHJvdGF0ZVkoLTE4MGRlZykgcm90YXRlWCgtMTgwZGVnKTtcclxuICB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgYW5pbWF0ZSB7XHJcbiAgMCUge1xyXG4gICAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSgxNjBweCkgcm90YXRlWCgwZGVnKSByb3RhdGVZKDBkZWcpO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDE2MHB4KSByb3RhdGVYKDBkZWcpIHJvdGF0ZVkoMGRlZyk7XHJcbiAgfVxyXG5cclxuICA1MCUge1xyXG4gICAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSgxNjBweCkgcm90YXRlWCgtMTgwZGVnKSByb3RhdGVZKDBkZWcpO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDE2MHB4KSByb3RhdGVYKC0xODBkZWcpIHJvdGF0ZVkoMGRlZyk7XHJcbiAgfVxyXG5cclxuICAxMDAlIHtcclxuICAgIHRyYW5zZm9ybTogcGVyc3BlY3RpdmUoMTYwcHgpIHJvdGF0ZVgoLTE4MGRlZykgcm90YXRlWSgtMTgwZGVnKTtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSgxNjBweCkgcm90YXRlWCgtMTgwZGVnKSByb3RhdGVZKC0xODBkZWcpO1xyXG4gIH1cclxufVxyXG5cclxuI3Njcm9sbCB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHJpZ2h0OiAxMHB4O1xyXG4gIGJvdHRvbTogMTBweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgd2lkdGg6IDUwcHg7XHJcbiAgaGVpZ2h0OiA1MHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM3Mjg5ZGE7XHJcbiAgdGV4dC1pbmRlbnQ6IC05OTk5cHg7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiA2MHB4XHJcbn1cclxuXHJcbiNzY3JvbGwgc3BhbiB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNTAlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICBtYXJnaW4tbGVmdDogLThweDtcclxuICBtYXJnaW4tdG9wOiAtMTJweDtcclxuICBoZWlnaHQ6IDA7XHJcbiAgd2lkdGg6IDA7XHJcbiAgYm9yZGVyOiA4cHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2ZmZmZmZjtcclxufVxyXG5cclxuI3Njcm9sbDpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDAwMDtcclxuICBvcGFjaXR5OiAxO1xyXG4gIGZpbHRlcjogXCJhbHBoYShvcGFjaXR5PTEwMClcIjtcclxuICAtbXMtZmlsdGVyOiBcImFscGhhKG9wYWNpdHk9MTAwKVwiO1xyXG59Il19 */